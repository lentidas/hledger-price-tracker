---
name: "release"

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run semantic-release in dry-run mode"
        required: false
        type: boolean
        default: false

jobs:
  semantic-release:
    runs-on: ubuntu-latest

    outputs:
      dry_run: ${{ steps.setup_vars.outputs.dry_run }}
      release_notes: ${{ steps.release_notes.outputs.content }}
      new_release_published: ${{ steps.semantic_release.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic_release.outputs.new_release_version }}

    steps:
    - name: Check if dry-run is activated and set output
      id: setup_vars
      run: |
        echo "dry_run=${{ inputs.dry_run || false }}" >> $GITHUB_OUTPUT

    - name: Generate authentication token from GitHub App
      id: app_token
      uses: actions/create-github-app-token@v1.11.1
      with:
        app-id: ${{ secrets.REPOSITORY_BOT_APP_ID }}
        private-key: ${{ secrets.REPOSITORY_BOT_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    - name: Get GitHub App User ID
      id: get_user_id
      run: echo "user-id=$(gh api "/users/${{ steps.app_token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.app_token.outputs.token }}

    - name: Checkout repository
      uses: actions/checkout@v4.2.2
      with:
        persist-credentials: false

    - name: Run Semantic Release
      id: semantic_release
      uses: cycjimmy/semantic-release-action@v4.2.0
      env:
        # For some unknown reason, we need to set the GITHUB_TOKEN and GH_TOKEN together.
        GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
        GH_TOKEN: ${{ steps.app_token.outputs.token }}
        GIT_AUTHOR_NAME: ${{ steps.app_token.outputs.app-slug }}[bot]
        GIT_AUTHOR_EMAIL: ${{ steps.get_user_id.outputs.user-id }}+${{ steps.app_token.outputs.app-slug }}[bot]@users.noreply.github.com>
        GIT_COMMITTER_NAME: ${{ steps.app_token.outputs.app-slug }}[bot]
        GIT_COMMITTER_EMAIL: ${{ steps.get_user_id.outputs.user-id }}+${{ steps.app_token.outputs.app-slug }}[bot]@users.noreply.github.com
      with:
        semantic_version: v24
        extra_plugins: |
          @semantic-release/git@10.0.1
          @semantic-release/exec@6.0.0
          @semantic-release/commit-analyzer@13.0.0
          @semantic-release/release-notes-generator@14.0.1
          @semantic-release/changelog@6.0.3
          conventional-changelog-conventionalcommits@8.0.0
        dry_run: steps.setup_vars.outputs.dry_run

    # Although the step semantic_release already has an output, it was not properly formatted, so we extract the
    # necessary information with the `exec` plugin.
    - name: Output release notes
      id: release_notes
      run: echo "content=$(cat /tmp/release-notes.md)" >> $GITHUB_OUTPUT

  goreleaser:
    runs-on: ubuntu-latest

    needs:
    - semantic-release

    if: ${{ needs.semantic-release.outputs.new_release_published == 'true' && needs.semantic-release.outputs.dry_run == 'false' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2
      with:
        token: '${{ github.token }}'
        ref: v${{ needs.semantic-release.outputs.new_release_version }}
        fetch-depth: 0
        persist-credentials: false

    - name: Create release notes file
      run: echo "${{ needs.semantic-release.outputs.release_notes }}" > /tmp/release-notes.md

    - name: Generate authentication token from GitHub App
      id: app-token
      uses: actions/create-github-app-token@v1.11.6
      with:
        app-id: ${{ secrets.REPOSITORY_BOT_APP_ID }}
        private-key: ${{ secrets.REPOSITORY_BOT_PRIVATE_KEY }}

    - name: Set up Go
      uses: actions/setup-go@v5.3.0
      with:
        go-version: stable

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6.2.1
      with:
        distribution: goreleaser
        version: "~> v2"
        args: release --clean --release-notes /tmp/release-notes.md
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
